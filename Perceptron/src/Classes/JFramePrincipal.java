/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Line2D;

/**
 *
 * @author aluno
 */
public class JFramePrincipal extends javax.swing.JFrame {

    boolean primeiro;

    /**
     * Creates new form JFramePrincipal
     */
    public JFramePrincipal() {
        initComponents();
    }

    public JFramePrincipal(boolean b) {
        primeiro = b;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanelPrincipal = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 0));

        jInternalFrame1.setBackground(new java.awt.Color(204, 204, 255));
        jInternalFrame1.setVisible(true);

        jPanelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        jPanelPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jPanelPrincipal.setPreferredSize(new java.awt.Dimension(526, 364));
        jPanelPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelPrincipalMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelPrincipalMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelPrincipalMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanelPrincipalMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelPrincipalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelPrincipalMouseExited

    }//GEN-LAST:event_jPanelPrincipalMouseExited

    private void jPanelPrincipalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelPrincipalMousePressed

    }//GEN-LAST:event_jPanelPrincipalMousePressed

    private void jPanelPrincipalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelPrincipalMouseReleased

    }//GEN-LAST:event_jPanelPrincipalMouseReleased

    private void jPanelPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelPrincipalMouseClicked
        desenharPontos(jPanelPrincipal.getGraphics());
        desenhar(jPanelPrincipal.getGraphics());
    }//GEN-LAST:event_jPanelPrincipalMouseClicked
    double constanteX = 263, constanteY = 182;
    
    public void dese(){
        
            desenharPontos(jPanelPrincipal.getGraphics());
            desenharReta1(jPanelPrincipal.getGraphics());
        
    }

    public void desenharReta1(Graphics g) {
        int y = -100, y1 = 100;
        Graphics2D g1 = (Graphics2D) g;
        double[] vet = {Perce.w1, -Perce.w2, Perce.r};
        int tam = 4;
        double x = (vet[1] * y + vet[2]) / vet[0];
        double x1 = (vet[1] * (y1) + vet[2]) / vet[0];
        Shape l = new Line2D.Double(x * 10 + constanteX, y * 10 + constanteY, x1 * 10 + constanteX, y1 * 10 + constanteY);
        g1.draw(l);
        l = new Line2D.Double(0 + constanteX, 364, 0 + constanteX, 0);
        g1.draw(l);
        double a=vet[0],b=-vet[1],c=vet[2];
        String str;
        if(b>0)
            str=""+a+"x1 + "+b+"x2 = "+c;
        else
            str=""+a+"x1 - "+b+"x2 = "+c;
        g.drawString(str,(int)constanteX+30,(int)constanteY-30);
        for (int k = -500; k < 500; k += 10) {
            l = new Line2D.Double(k + constanteX, 182 + tam, k + constanteX, 182 - tam);
            g1.draw(l);
            l = new Line2D.Double(263 + tam, k + constanteY, 263 - tam, k + constanteY);
            g1.draw(l);
        }
        l = new Line2D.Double(526, 0 + constanteY, 0, 0 + constanteY);
        g1.draw(l);

    }

    public void desenhar(Graphics g) {
        int y = -100, y1 = 100;
        Graphics2D g1 = (Graphics2D) g;
        double[] vet = Perce.calcular();
        int tam = 4;
        double x = (vet[1] * y + vet[2]) / vet[0];
        double x1 = (vet[1] * (y1) + vet[2]) / vet[0];
        
        Shape l = new Line2D.Double(x * 10 + constanteX, y * 10 + constanteY, x1 * 10 + constanteX, y1 * 10 + constanteY);
        g1.draw(l);
        l = new Line2D.Double(0 + constanteX, 364, 0 + constanteX, 0);
        g1.draw(l);
        double a=vet[0],b=-vet[1],c=vet[2];
        String str=""+a+"x1 + "+b+"x2 = "+c;
        g.drawString(str,(int)constanteX+30,(int)constanteY-30);
        for (int k = -500; k < 500; k += 10) {
            l = new Line2D.Double(k + constanteX, 182 + tam, k + constanteX, 182 - tam);
            g1.draw(l);
            l = new Line2D.Double(263 + tam, k + constanteY, 263 - tam, k + constanteY);
            g1.draw(l);
        }
        l = new Line2D.Double(526, 0 + constanteY, 0, 0 + constanteY);
        g1.draw(l);

    }

    public void desenharPontos(Graphics g) {
        Shape l;
        Graphics2D g1 = (Graphics2D) g;
        int[][] pontos = Perce.pontos;
        for (int k = 0; k < Perce.tam; k++) {
            l = new Line2D.Double(pontos[k][0] * 10 + constanteX, pontos[k][1] * 10 + constanteY, pontos[k][0] * 10 + constanteX, pontos[k][1] * 10 + constanteY);
            if (pontos[k][2] == 1) {
                g1.setColor(Color.red);
            } else {
                g1.setColor(Color.blue);
            }
            g1.draw(l);
        }
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JPanel jPanelPrincipal;
    // End of variables declaration//GEN-END:variables
}
